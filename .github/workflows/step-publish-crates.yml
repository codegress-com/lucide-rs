#
# Crates Publishing Workflow
#
# This workflow publishes the Lucide Rust library to crates.io.
# It handles authentication and publishes the package using the workspace version.
#
# Triggered: Called by other workflows (workflow_call)
# Purpose: Publish lucide library to the official Rust package registry
#

name: ‚öôÔ∏è Publish to Crates.io

on:
  # Allow this workflow to be called by other workflows
  workflow_call:
    inputs:
      ref:
        description: "Git ref to publish from (tag, branch, or commit)"
        required: false
        type: string
        default: "main"
      dry_run:
        description: "Perform a dry run without actually publishing"
        required: false
        type: boolean
        default: false

# Environment variables
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Publish library to crates.io
  publish-library:
    name: Publish Lucide Library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Verify package configuration
        run: |
          echo "Verifying package configuration..."

          # Check that the lucide package exists and has correct version
          cargo metadata --format-version=1 | jq -r '.packages[] | select(.name == "lucide") | "\(.name) v\(.version)"'

          # Verify package.metadata is correct
          echo "Package metadata:"
          cargo metadata --format-version=1 | jq '.packages[] | select(.name == "lucide") | .metadata'

      - name: Run dry-run publish
        if: ${{ inputs.dry_run == true }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          echo "üß™ Running dry-run publish..."
          cargo publish -p lucide --dry-run --allow-dirty
          echo "‚úÖ Dry-run completed successfully"

      - name: Publish to crates.io
        if: ${{ inputs.dry_run != true }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          echo "üì¶ Publishing Lucide library to crates.io..."

          # Publish the library package
          cargo publish -p lucide --allow-dirty

          echo "‚úÖ Package published successfully to crates.io!"
          echo "üîó Available at: https://crates.io/crates/lucide"

      - name: Verify publication
        if: ${{ inputs.dry_run != true }}
        run: |
          echo "üîç Verifying publication..."

          # Wait a moment for crates.io to process
          sleep 30

          # Try to fetch the package info (may take a few minutes to be available)
          echo "Package should be available soon at https://crates.io/crates/lucide"

          echo "Installation command for users:"
          echo "  cargo add lucide"
